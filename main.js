const countryPropertyName = "country";

const myDescription = {
  age: 21,
  pol: "M",
  car: true,
};
myDescription.color = "green";
myDescription.car = false;
// myDescription["car"] = true;// или через квадратные
myDescription[countryPropertyName] = "Ukraine";

delete myDescription.color;
// console.log(myDescription);

const car = {
  vozpast: 20,
  Characterictic: {
    color: "red",
    type: "sedan",
  },
  vid: function () {
    console.log("vperet!!!");
  },
};

// ///////1 способ избежать мутации////////////////////////////////////

// const mashine = Object.assign({}, car);
// console.log(car.vozpast);
// console.log(mashine.vozpast);

////////////// 2 способ избежать мутации/////////////////////

// const mash = { ...car };
// mash.vid = function () {
//   console.log("menyaem");
// };

///// 3 способ самый топ работаеь со вложенными объектам///////////////

// const lychuySposob = JSON.parse(JSON.stringify(car));

const obj = {};
obj.name = "John";
obj.surname = "Smith";
obj.name = "Pete";
delete obj.name;

//Напишите функцию isEmpty(obj), которая возвращает true, если у объекта нет свойств, иначе false.

let schedule = {};

// alert(isEmpty(schedule)); // true

schedule.wake = "get up";

// alert(isEmpty(schedule)); // false

function isEmpty(schedule) {
  for (let key in schedule) {
    // если тело цикла начнет выполняться - значит в объекте есть свойства
    return false;
  }
  return true;
}

//Напишите код для суммирования всех зарплат и сохраните результат в переменной sum. Должно получиться 390. Если объект salaries пуст, то результат должен быть 0.
// const salaries = {
//   John: 100,
//   Ann: 160,
//   Pete: 130,
// };

// sum = 0;
// for (let key in salaries) {
//   //   sum += salaries[key];
//   sum += salaries[key];
// }
// alert(sum);

////Создайте функцию multiplyNumeric(obj), которая умножает все числовые свойства объекта obj на 2./////
// let menu = {
//   width: 200,
//   height: 300,
//   title: "My menu",
// };

// function multiplyNumeric(menu) {
//   for (let key in menu) {
//     if (typeof menu[key] == "number") {
//       menu[key] *= 2;
//     }
//   }
// }

// let age = prompt("Сколько тебе лет?", 100);

// alert(`Тебе ${age} лет!`);

// let userName = +prompt("Сколько тебе лет?", "21?");
// type = typeof userName; // убедились что вернуло число, а не строку
// alert(`  ${type}`);

//////////// 1 sposob//////////////

// let a = prompt("Первое число?", 1);
// let b = prompt("Второе число?", 2);

// alert(Number(a) + Number(b));

////////   2 sposob /////////////////

// let a = +prompt("Первое число?", 1);
// let b = +prompt("Второе число?", 2);

// alert(a + b);

///////// 3 sposob //////////
// let a = prompt("Первое число?", 1);
// let b = prompt("Второе число?", 2);

// alert(+a + +b);

// if ("0") {
//   alert("hello");
// }
// Используя конструкцию if..else, напишите код, который будет спрашивать: „Какое «официальное» название JavaScript?“

// Если пользователь вводит «ECMAScript», то показать: «Верно!», в противном случае – отобразить: «Не знаете? ECMAScript!»
// let prom = prompt("Какое официальное название JavaScript", "otvet");

// if (prom == "ECMAScript") {
//   alert("verno");
// } else {
//   alert("Не знаете?'ECMAScript!' ");
// }

// Используя конструкцию if..else, напишите код, который получает число через prompt, а затем выводит в alert:

// 1, если значение больше нуля,
// -1, если значение меньше нуля,
// 0, если значение равно нулю.

// let value = +prompt("Введите любое число!", 0);
// if (value > 0) {
//   alert(1);
// } else if (value < 0) {
//   alert(-1);
// } else {
//   alert(0);
// }
//Перепишите конструкцию if с использованием условного оператора '?':

// let result;

// if (a + b < 4) {
//   result = 'Мало';
// } else {
//   result = 'Много';
// }
// let result = условие ? значение1 : значение2;
// let accessAllowed = age > 18 ? true : false;

// let a = 3;
// let b = 4;
// let results = a + b < 4 ? alert("Malo") : alert("Mnogo");

// Перепишите if..else с использованием нескольких операторов '?'.

// Для читаемости рекомендуется разбить код на несколько строк.

// let message;

// if (login == 'Сотрудник') {
//   message = 'Привет';
// } else if (login == 'Директор') {
//   message = 'Здравствуйте';
// } else if (login == '') {
//   message = 'Нет логина';
// } else {
//   message = '';
// }
// let login = prompt("doljnost?", "d");
// let message =
//   login == "Сотрудник"
//     ? alert("Привет")
//     : login == "Директор"
//     ? alert("Здравствуйте")
//     : alert("Нет логина");
// alert(message)

//Что выведет код ниже?

// alert( alert(1) || 2 || alert(3) ); //2

// Что выведет код ниже?

// alert(1 && null && 2); // null

// Что выведет код ниже?

// alert( alert(1) && alert(2) );
// Ответ: 1, а затем undefined.

// alert( alert(1) && alert(2) );
// Вызов alert не возвращает значения, или, иначе говоря, возвращает undefined.

// Поэтому до правого alert дело не дойдёт, вычисления закончатся на левом.

// Что выведет код ниже?

// alert( null || 2 && 3 || 4 ); //3

// Напишите условие if для проверки, что переменная age находится в диапазоне между 14 и 90 включительно.

// «Включительно» означает, что значение переменной age может быть равно 14 или 90.

// Первый вариант:

// if (!(age >= 14 && age <= 90))
// Второй вариант:

// if (age < 14 || age > 90)

// Какие из перечисленных ниже alert выполнятся?

// Какие конкретно значения будут результатами выражений в условиях if(...)?

// if (-1 || 0) alert( 'first' );
// if (-1 && 0) alert( 'second' );
// if (null || -1 && 1) alert( 'third' );

// Выполнится.
// Результат -1 || 0 = -1, в логическом контексте true
//if (-1 || 0) alert( 'first' );

// Не выполнится
// -1 && 0 = 0,  в логическом контексте false
//if (-1 && 0) alert( 'second' );

// Выполнится
// оператор && имеет больший приоритет, чем ||
// так что -1 && 1 выполнится раньше
// вычисления: null || -1 && 1  ->  null || 1  ->  1
//if (null || -1 && 1) alert( 'third' );

//Напишите код, который будет спрашивать логин с помощью prompt.

// Если посетитель вводит «Админ», то prompt запрашивает пароль, если ничего не введено или нажата клавиша Esc – показать «Отменено», в противном случае отобразить «Я вас не знаю».

// Пароль проверять так:

// Если введён пароль «Я главный», то выводить «Здравствуйте!»,
// Иначе – «Неверный пароль»,
// При отмене – «Отменено».

// let login = prompt("Кто там?", "");
// if (login == "Admin") {
//   let l = prompt("Пароль?", "");
//   if (l == "я главный") {
//     alert("Здравсвуйте!");
//   }
//   if (l == "") {
//     alert("Отмена");
//   } else {
//     if (!(l == "") || l == "я главный") {
//       alert("неверный пароль!");
//     }
//   }
// }
// if (login == "") {
//   alert("Отмена");
// } else {
//   !(login == "") || login == "Admin";
//   {
//     alert("Я вас не знаю");
//   }
// }

// Например, здесь мы отобразим user, если её значение не null/undefined, в противном случае Аноним:

//  let user;

// alert(user ?? "Аноним"); // Аноним (user не существует)

// А вот пример, когда user присвоено значение:

// let user = "Иван";

// alert(user ?? "Аноним"); // Иван (user существует)

// Мы хотели бы отобразить имя пользователя, используя одну из этих переменных, или показать «Аноним», если все они null/undefined.

// Для этого воспользуемся оператором ??:
// let firstName = null;
// let lastName = null;
// let nickName = "Суперкодер";

// показывает первое значение, которое определено:
// alert(firstName ?? lastName ?? nickName ?? "Аноним"); // Суперкодер

// Важное различие между ними заключается в том, что:

// || возвращает первое истинное значение.
// ?? возвращает первое определённое значение.

// let height = 0;

// alert(height || 100); // 100
// alert(height ?? 100); // 0
// height || 100 проверяет height на ложное значение, оно равно 0, да, ложное.
// поэтому результатом || является второй аргумент, т.е. 100.
// height ?? 100 проверяет, что переменная height содержит null/undefined, а поскольку это не так,
// то результатом является сама переменная height, т.е. 0.

// Какое последнее значение выведет этот код? Почему?

// let i = 3;

// while (i) {
//   alert( i-- );
// }

// Для каждого цикла запишите, какие значения он выведет. Потом сравните с ответом.

// Оба цикла выводят alert с одинаковыми значениями или нет?

// Префиксный вариант ++i:

// let i = 0;
// while (++i < 5) alert(i);
// Постфиксный вариант i++

// let i = 0;
// while (i++ < 5) alert(i);

// От 1 до 4

// let i = 0;
// while (++i < 5) alert( i );
// Первое значение: i = 1, так как операция ++i сначала увеличит i, а потом уже произойдёт сравнение и выполнение alert.

// Далее 2, 3, 4… Значения выводятся одно за другим. Для каждого значения сначала происходит увеличение, а потом – сравнение, так как ++ стоит перед переменной.

// При i = 4 произойдёт увеличение i до 5, а потом сравнение while (5 < 5) – это неверно. Поэтому на этом цикл остановится, и значение 5 выведено не будет.

// От 1 до 5

// let i = 0;
// while (i++ < 5) alert( i );
// Первое значение: i = 1. Остановимся на нём подробнее. Оператор i++ увеличивает i, возвращая старое значение, так что в сравнении i++ < 5 будет участвовать старое i = 0.

// Но последующий вызов alert уже не относится к этому выражению, так что получит новый i = 1.

// Далее 2, 3, 4… Для каждого значения сначала происходит сравнение, а потом – увеличение, и затем срабатывание alert.

// Окончание цикла: при i = 4 произойдёт сравнение while (4 < 5) – верно, после этого сработает i++, увеличив i до 5, так что значение 5 будет выведено. Оно станет последним.

// Значение i = 5 последнее, потому что на следующем шаге while (5 < 5) ложно.

// Ответ: от 0 до 4 в обоих случаях.

// for (let i = 0; i < 5; ++i) alert( i );

// for (let i = 0; i < 5; i++) alert( i );
// Такой результат обусловлен алгоритмом работы for:

// Выполнить единожды присваивание i = 0 перед чем-либо (начало).
// Проверить условие i < 5
// Если true – выполнить тело цикла alert(i), и затем i++
// Увеличение i++ выполняется отдельно от проверки условия (2), значение i при этом не используется, поэтому нет никакой разницы между i++ и ++i.

// for (let i = 2; i <= 10; i++) {
//   if (i % 2 == 1) continue;
//   alert(i);
// }
// Перепишите код, заменив цикл for на while, без изменения поведения цикла.

// for (let i = 0; i < 3; i++) {
//   alert(`number ${i}!`);
// }

// let i = 0;
// while (i < 3) {
//   alert(`number ${i}!`);
//   i++;
// }

// let value = +prompt("Введите число, большее 100!", "");
// if (value <= 99) {
//   value = +prompt("Введите число, большее 100!", "");
// }

// let value = +prompt("Введите число, большее 100!", "");
// for (let i = 1; value <= 99; i++) {
//   value = +prompt("Введите число, большее 100!", "");
// }
// let num;

// do {
//   num = prompt("Введите число больше 100?", 0);
// } while (num <= 100 && num);
// Цикл do..while повторяется, пока верны две проверки:

// Проверка num <= 100 – то есть, введённое число всё ещё меньше 100.
// Проверка && num вычисляется в false, когда num имеет значение null или пустая строка ''. В этом случае цикл while тоже нужно прекратить.
// Кстати, сравнение num <= 100 при вводе null даст true, так что вторая проверка необходима.

// Натуральное число, большее 1, называется простым, если оно ни на что не делится, кроме себя и 1.

// Другими словами, n > 1 – простое, если при его делении на любое число кроме 1 и n есть остаток.

// Например, 5 это простое число, оно не может быть разделено без остатка на 2, 3 и 4.

// Напишите код, который выводит все простые числа из интервала от 2 до n.

// Для n = 10 результат должен быть 2,3,5,7.

// P.S. Код также должен легко модифицироваться для любых других интервалов.

// let n = 10;

// nextPrime: for (let i = 2; i <= n; i++) {
//   // Для всех i...

//   for (let j = 2; j < i; j++) {
//     // проверить, делится ли число..
//     if (i % j == 0) continue nextPrime; // не подходит, берём следующее
//   }

//   alert(i); // простое число
// }
// Напишите if..else, соответствующий следующему switch:

// let browser = prompt("Какой браузер?", "");

// switch (browser) {
//   case "Edge":
//     alert("You've got the Edge!");
//     break;

//   case "Chrome":
//   case "Firefox":
//   case "Safari":
//   case "Opera":
//     alert("Okay we support these browsers too");
//     break;

//   default:
//     alert("We hope that this page looks ok!");
// }

// let browser = prompt("Какой браузер?", "");
// if (browser == "Edge") {
//   alert("You've got the Edge!");
// } else if (
//   browser == "Chrome" ||
//   browser == "Firefox" ||
//   browser == "Safari" ||
//   browser == "Opera"
// ) {
//   alert("Okay we support these browsers too");
// } else {
//   alert("We hope that this page looks ok!");
// }

// Перепишите код с использованием одной конструкции switch:

// const number = +prompt("Введите число между 0 и 3", "");

// if (number === 0) {
//   alert("Вы ввели число 0");
// }

// if (number === 1) {
//   alert("Вы ввели число 1");
// }

// if (number === 2 || number === 3) {
//   alert("Вы ввели число 2, а может и 3");
// }

const number = +prompt("Введите число между 0 и 3", "");
switch (number) {
  case 0:
    alert("Вы ввели число 0");
    break;
  case 1:
    alert("Вы ввели число 1");
    break;

  case 2:
  case 3:
    alert("Вы ввели число 2,а может и 3 ");
    break;
}
